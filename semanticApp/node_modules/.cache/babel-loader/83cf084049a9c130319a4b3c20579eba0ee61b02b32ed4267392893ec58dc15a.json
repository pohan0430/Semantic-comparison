{"ast":null,"code":"var _jsxFileName = \"C:\\\\NYCU\\\\Intern\\\\semantic tag\\\\semantic\\\\src\\\\Script.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Script() {\n  _s();\n  const [inputString, setInputString] = useState('');\n  const [result, setResult] = useState('');\n  const processString = () => {\n    console.log(\"Function called.\");\n    if (inputString.length === 0) {\n      return;\n    }\n    fetch('/search', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        input_string: inputString\n      })\n    }).then(response => response.json()).then(data => {\n      setResult(JSON.stringify(data));\n    }).catch(error => console.error('Error:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"inputString\",\n      children: \"Enter semantic:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"inputString\",\n      placeholder: \"Type a string\",\n      value: inputString,\n      onChange: e => setInputString(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: processString,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Script, \"Sp/yVYdixsQnd3pRtvR8jaUtw38=\");\n_c = Script;\nexport default Script;\nvar _c;\n$RefreshReg$(_c, \"Script\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Script","_s","inputString","setInputString","result","setResult","processString","console","log","length","fetch","method","headers","body","JSON","stringify","input_string","then","response","json","data","catch","error","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/NYCU/Intern/semantic tag/semantic/src/Script.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Script() {\r\n  const [inputString, setInputString] = useState('');\r\n  const [result, setResult] = useState('');\r\n\r\n  const processString = () => {\r\n    console.log(\"Function called.\");\r\n    if (inputString.length === 0) {\r\n        return;\r\n    }\r\n\r\n    fetch('/search', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ input_string: inputString })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        setResult(JSON.stringify(data));\r\n    })\r\n    .catch(error => console.error('Error:', error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"inputString\">Enter semantic:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"inputString\"\r\n        placeholder=\"Type a string\"\r\n        value={inputString}\r\n        onChange={(e) => setInputString(e.target.value)}\r\n      />\r\n      <button onClick={processString}>Search</button>\r\n      <pre>{result}</pre>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Script;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1BC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/B,IAAIN,WAAW,CAACO,MAAM,KAAK,CAAC,EAAE;MAC1B;IACJ;IAEAC,KAAK,CAAC,SAAS,EAAE;MACbC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,YAAY,EAAEd;MAAY,CAAC;IACtD,CAAC,CAAC,CACDe,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVf,SAAS,CAACS,IAAI,CAACC,SAAS,CAACK,IAAI,CAAC,CAAC;IACnC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIf,OAAO,CAACe,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACjD,CAAC;EAED,oBACEvB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAOyB,OAAO,EAAC,aAAa;MAAAD,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACpD7B,OAAA;MACE8B,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,aAAa;MAChBC,WAAW,EAAC,eAAe;MAC3BC,KAAK,EAAE9B,WAAY;MACnB+B,QAAQ,EAAGC,CAAC,IAAK/B,cAAc,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACF7B,OAAA;MAAQqC,OAAO,EAAE9B,aAAc;MAAAiB,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/C7B,OAAA;MAAAwB,QAAA,EAAMnB;IAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV;AAAC3B,EAAA,CAtCQD,MAAM;AAAAqC,EAAA,GAANrC,MAAM;AAwCf,eAAeA,MAAM;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}